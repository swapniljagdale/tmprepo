name: Deploy master branch

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: dev
    strategy:
      matrix:
        node: [ 18.x ]
    name: Node ${{ matrix.node }} sample
    steps:
      #approver step
      #- uses: trstringer/manual-approval@v1
      #  with:
      #    secret: ${{ github.TOKEN }}
      #    approvers: swapniljagdale
      # check out action
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: list dir
        run: ls -l
      - run: npm ci
      # Install the AWS CLI
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      # credentials
      - name: Print Credentials
        run: echo $AWS_ACCESS_KEY_ID
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      # Set up credentials used by AWS CLI
      - name: Set up AWS credentials
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          mkdir -p ~/.aws
          touch ~/.aws/credentials
          echo "[default]
          aws_access_key_id = $AWS_ACCESS_KEY_ID
          aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials

      # Copy the file to the S3 bucket
      - name: Upload to S3
        run: aws s3 cp . s3://swapnil-code-builds/bitbucket/test_cicd/oasis_nba_medical/ --recursive
      
      - name: serverless deploy
        uses: serverless/github-action@v3.2
        with:
          args: -c "npx serverless plugin install -n serverless-glue && serverless deploy"
          entrypoint: /bin/sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Remove stored credentials file
      - name: Cleanup
        run: rm -rf ~/.aws
